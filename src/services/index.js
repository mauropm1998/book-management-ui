/**
 * OpenApi specification - Mauro
 * OpenApi documentation for Spring Security
 *
 * The version of the OpenAPI document: 1.0
 * Contact: maurocristovao1998@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthenticationDto from './model/AuthenticationDto';
import AuthenticationResponseDto from './model/AuthenticationResponseDto';
import Book from './model/Book';
import BookResponseDto from './model/BookResponseDto';
import BookTransactionHistory from './model/BookTransactionHistory';
import BorrowedBookResponseDto from './model/BorrowedBookResponseDto';
import Feedback from './model/Feedback';
import GrantedAuthority from './model/GrantedAuthority';
import PageResponseBookResponseDto from './model/PageResponseBookResponseDto';
import PageResponseBorrowedBookResponseDto from './model/PageResponseBorrowedBookResponseDto';
import PageResponseFeedback from './model/PageResponseFeedback';
import RegistrationDto from './model/RegistrationDto';
import Role from './model/Role';
import User from './model/User';
import AuthenticationApi from './api/AuthenticationApi';
import BookApi from './api/BookApi';
import FeedbackApi from './api/FeedbackApi';


/**
* OpenApi documentation for Spring Security.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OpenApiSpecificationMauro = require('index'); // See note below*.
* var xxxSvc = new OpenApiSpecificationMauro.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OpenApiSpecificationMauro.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OpenApiSpecificationMauro.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OpenApiSpecificationMauro.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthenticationDto model constructor.
     * @property {module:model/AuthenticationDto}
     */
    AuthenticationDto,

    /**
     * The AuthenticationResponseDto model constructor.
     * @property {module:model/AuthenticationResponseDto}
     */
    AuthenticationResponseDto,

    /**
     * The Book model constructor.
     * @property {module:model/Book}
     */
    Book,

    /**
     * The BookResponseDto model constructor.
     * @property {module:model/BookResponseDto}
     */
    BookResponseDto,

    /**
     * The BookTransactionHistory model constructor.
     * @property {module:model/BookTransactionHistory}
     */
    BookTransactionHistory,

    /**
     * The BorrowedBookResponseDto model constructor.
     * @property {module:model/BorrowedBookResponseDto}
     */
    BorrowedBookResponseDto,

    /**
     * The Feedback model constructor.
     * @property {module:model/Feedback}
     */
    Feedback,

    /**
     * The GrantedAuthority model constructor.
     * @property {module:model/GrantedAuthority}
     */
    GrantedAuthority,

    /**
     * The PageResponseBookResponseDto model constructor.
     * @property {module:model/PageResponseBookResponseDto}
     */
    PageResponseBookResponseDto,

    /**
     * The PageResponseBorrowedBookResponseDto model constructor.
     * @property {module:model/PageResponseBorrowedBookResponseDto}
     */
    PageResponseBorrowedBookResponseDto,

    /**
     * The PageResponseFeedback model constructor.
     * @property {module:model/PageResponseFeedback}
     */
    PageResponseFeedback,

    /**
     * The RegistrationDto model constructor.
     * @property {module:model/RegistrationDto}
     */
    RegistrationDto,

    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The AuthenticationApi service constructor.
    * @property {module:api/AuthenticationApi}
    */
    AuthenticationApi,

    /**
    * The BookApi service constructor.
    * @property {module:api/BookApi}
    */
    BookApi,

    /**
    * The FeedbackApi service constructor.
    * @property {module:api/FeedbackApi}
    */
    FeedbackApi
};
